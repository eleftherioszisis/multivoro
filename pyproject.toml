[build-system]
requires = ["scikit-build-core>= 0.4.3", "nanobind>=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "multivoro"
version = "0.0.1"
description = "Parallel cell-based 3D voronoi tessellations"
readme = "README.rst"
requires-python = ">=3.8"
authors = [
    { name = "Eleftherios Zisis", email = "elef.zisis@gmail.com" },
]
dependencies=[
    "numpy",
]
classifiers = [
  "Development Status :: 3 - Alpha",

  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",

  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",

  "Topic :: Scientific/Engineering :: Mathematics",
]

[project.urls]
Homepage = "https://github.com/eleftherioszisis/multivoro"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Optional: run pytest to ensure that the package was correctly built
test-command = "pytest {project}/tests"
test-requires = "pytest"

# Only target 64 bit architectures
skip = ["pp*", "*musllinux*"]
archs = ["auto64"]

# Needed for full C++17 support on macOS
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "B", # bugbear
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "S", # bandit
    "UP", # pyupgrade
]
ignore = [
    "S107", "S602", "S603", "S608"
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in
# docstrings.
docstring-code-line-length = 100
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
